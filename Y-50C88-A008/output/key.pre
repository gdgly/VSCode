
# 1 "E:\ProjectFile\2019\1-50C88\Program\Y-50C88-A008\key.c"

# 26 "D:\PROGRA~2\CMS_ID~1.12\data\include\htc.h"
extern const char __xc8_OPTIM_SPEED;

extern double __fpnormalize(double);


# 13 "D:\PROGRA~2\CMS_ID~1.12\data\include\xc8debug.h"
#pragma intrinsic(__builtin_software_breakpoint)
extern void __builtin_software_breakpoint(void);

# 13 "D:\PROGRA~2\CMS_ID~1.12\data\include\cms89f23x5.h"
volatile unsigned char INDF @ 0x000;
volatile unsigned char TMR0 @ 0x001;
volatile unsigned char PCL @ 0x002;
volatile unsigned char STATUS @ 0x003;
volatile unsigned char FSR @ 0x004;
volatile unsigned char PORTA @ 0x005;
volatile unsigned char PORTB @ 0x006;
volatile unsigned char PORTC @ 0x007;
volatile unsigned char PORTD @ 0x008;

volatile unsigned char PCLATH @ 0x00A;
volatile unsigned char INTCON @ 0x00B;
volatile unsigned char PIR1 @ 0x00C;

volatile unsigned char TMR1L @ 0x00E;
volatile unsigned char TMR1H @ 0x00F;
volatile unsigned char T1CON @ 0x010;
volatile unsigned char TMR2 @ 0x011;
volatile unsigned char T2CON @ 0x012;

volatile unsigned char BAUDCTL1 @ 0x015;
volatile unsigned char RCREG1 @ 0x016;
volatile unsigned char RCSTA1 @ 0x017;
volatile unsigned char RCSTA0 @ 0x018;
volatile unsigned char TXREG0 @ 0x019;
volatile unsigned char RCREG0 @ 0x01A;
volatile unsigned char CCPR0L @ 0x01B;
volatile unsigned char CCPR1L @ 0x01C;
volatile unsigned char PWMCON @ 0x01D;
volatile unsigned char ADRESH @ 0x01E;
volatile unsigned char ADCON0 @ 0x01F;



volatile unsigned char OPTION_REG @ 0x081;
volatile unsigned char TRISA @ 0x085;
volatile unsigned char TRISB @ 0x086;
volatile unsigned char TRISC @ 0x087;
volatile unsigned char TRISD @ 0x088;
volatile unsigned char WPDA @ 0x089;
volatile unsigned char PIE1 @ 0x08C;

volatile unsigned char OSCCON @ 0x08F;
volatile unsigned char OSCTUNE @ 0x090;

volatile unsigned char PR2 @ 0x092;

volatile unsigned char WPUB @ 0x095;
volatile unsigned char IOCB @ 0x096;
volatile unsigned char TXSTA1 @ 0x097;
volatile unsigned char TXSTA0 @ 0x098;
volatile unsigned char SPBRG0 @ 0x099;
volatile unsigned char SPBRGH0 @ 0x09A;
volatile unsigned char SPBRG1 @ 0x09B;
volatile unsigned char SPBRGH1 @ 0x09C;
volatile unsigned char TXREG1 @ 0x09D;
volatile unsigned char ADRESL @ 0x09E;
volatile unsigned char ADCON1 @ 0x09F;




volatile unsigned char WDTCON @ 0x105;
volatile unsigned char WPDB @ 0x107;
volatile unsigned char WPDC @ 0x108;
volatile unsigned char WPDD @ 0x109;
volatile unsigned char EEDATA @ 0x10C;
volatile unsigned char EEADR @ 0x10D;
volatile unsigned char EEDATH @ 0x10E;
volatile unsigned char EEADRH @ 0x10F;
volatile unsigned char TABLE_SPH @ 0x110;
volatile unsigned char TABLE_SPL @ 0x111;
volatile unsigned char TABLE_DATAH @ 0x112;
volatile unsigned char LCDCON3 @ 0x113;
volatile unsigned char LCDCON @ 0x114;

volatile unsigned char LEDCON3 @ 0x113;
volatile unsigned char LEDCON @ 0x114;


volatile unsigned char WPUD @ 0x185;
volatile unsigned char BAUDCTL0 @ 0x187;

volatile unsigned char EECON1 @ 0x18C;
volatile unsigned char EECON2 @ 0x18D;
volatile unsigned char WPUA @ 0x18E;
volatile unsigned char WPUC @ 0x18F;
volatile unsigned char LCDCON0 @ 0x190;
volatile unsigned char LCDCON1 @ 0x191;
volatile unsigned char LCDADD @ 0x192;
volatile unsigned char LCDDATA @ 0x193;

volatile unsigned char LEDCON0 @ 0x190;
volatile unsigned char LEDCON1 @ 0x191;
volatile unsigned char LEDADD @ 0x192;
volatile unsigned char LEDDATA @ 0x193;

volatile unsigned char SEGEN2 @ 0x194;
volatile unsigned char SEGEN1 @ 0x195;
volatile unsigned char SEGEN0 @ 0x196;
volatile unsigned char LCDCON2 @ 0x197;

volatile unsigned char LEDCON2 @ 0x197;

# 121
volatile bit IRP @ ((unsigned)&STATUS*8)+7;
volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
volatile bit TO @ ((unsigned)&STATUS*8)+4;
volatile bit PD @ ((unsigned)&STATUS*8)+3;
volatile bit ZERO @ ((unsigned)&STATUS*8)+2;
volatile bit DC @ ((unsigned)&STATUS*8)+1;
volatile bit CARRY @ ((unsigned)&STATUS*8)+0;


volatile bit RA7 @ ((unsigned)&PORTA*8)+7;
volatile bit RA6 @ ((unsigned)&PORTA*8)+6;
volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
volatile bit RA0 @ ((unsigned)&PORTA*8)+0;


volatile bit RB7 @ ((unsigned)&PORTB*8)+7;
volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
volatile bit RB0 @ ((unsigned)&PORTB*8)+0;


volatile bit RC7 @ ((unsigned)&PORTC*8)+7;
volatile bit RC6 @ ((unsigned)&PORTC*8)+6;
volatile bit RC5 @ ((unsigned)&PORTC*8)+5;
volatile bit RC4 @ ((unsigned)&PORTC*8)+4;
volatile bit RC3 @ ((unsigned)&PORTC*8)+3;
volatile bit RC2 @ ((unsigned)&PORTC*8)+2;
volatile bit RC1 @ ((unsigned)&PORTC*8)+1;
volatile bit RC0 @ ((unsigned)&PORTC*8)+0;


volatile bit RD7 @ ((unsigned)&PORTD*8)+7;
volatile bit RD6 @ ((unsigned)&PORTD*8)+6;
volatile bit RD5 @ ((unsigned)&PORTD*8)+5;
volatile bit RD4 @ ((unsigned)&PORTD*8)+4;
volatile bit RD3 @ ((unsigned)&PORTD*8)+3;
volatile bit RD2 @ ((unsigned)&PORTD*8)+2;
volatile bit RD1 @ ((unsigned)&PORTD*8)+1;
volatile bit RD0 @ ((unsigned)&PORTD*8)+0;



volatile bit GIE @ ((unsigned)&INTCON*8)+7;
volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
volatile bit INTE @ ((unsigned)&INTCON*8)+4;
volatile bit RBIE @ ((unsigned)&INTCON*8)+3;

volatile bit RABIE @ ((unsigned)&INTCON*8)+3;
volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
volatile bit INTF @ ((unsigned)&INTCON*8)+1;
volatile bit RBIF @ ((unsigned)&INTCON*8)+0;

volatile bit RABIF @ ((unsigned)&INTCON*8)+0;



volatile bit RC1IF @ ((unsigned)&PIR1*8)+7;
volatile bit TX1IF @ ((unsigned)&PIR1*8)+6;
volatile bit RC0IF @ ((unsigned)&PIR1*8)+5;
volatile bit TX0IF @ ((unsigned)&PIR1*8)+4;
volatile bit EEIF @ ((unsigned)&PIR1*8)+3;
volatile bit ADIF @ ((unsigned)&PIR1*8)+2;
volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
volatile bit TMR1IF @ ((unsigned)&PIR1*8)+0;



volatile bit T1GINV @ ((unsigned)&T1CON*8)+7;
volatile bit TMR1GE @ ((unsigned)&T1CON*8)+6;
volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
volatile bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;
volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;



volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;


volatile bit RCIDL1 @ ((unsigned)&BAUDCTL1*8)+6;
volatile bit SCKP1 @ ((unsigned)&BAUDCTL1*8)+4;
volatile bit BRG16EN1 @ ((unsigned)&BAUDCTL1*8)+3;


volatile bit RCIDL @ ((unsigned)&BAUDCTL0*8)+6;
volatile bit SCKP @ ((unsigned)&BAUDCTL0*8)+4;
volatile bit BRG16EN0 @ ((unsigned)&BAUDCTL0*8)+3;



volatile bit SPEN @ ((unsigned)&RCSTA0*8)+7;
volatile bit RX9EN0 @ ((unsigned)&RCSTA0*8)+6;
volatile bit SREN @ ((unsigned)&RCSTA0*8)+5;
volatile bit CREN @ ((unsigned)&RCSTA0*8)+4;
volatile bit FERR @ ((unsigned)&RCSTA0*8)+2;
volatile bit OERR @ ((unsigned)&RCSTA0*8)+1;
volatile bit RX9D @ ((unsigned)&RCSTA0*8)+0;



volatile bit SPEN1 @ ((unsigned)&RCSTA1*8)+7;
volatile bit RX9EN1 @ ((unsigned)&RCSTA1*8)+6;
volatile bit SREN1 @ ((unsigned)&RCSTA1*8)+5;
volatile bit CREN1 @ ((unsigned)&RCSTA1*8)+4;
volatile bit FERR1 @ ((unsigned)&RCSTA1*8)+2;
volatile bit OERR1 @ ((unsigned)&RCSTA1*8)+1;
volatile bit RX9D1 @ ((unsigned)&RCSTA1*8)+0;


volatile bit PWMSEL @ ((unsigned)&PWMCON*8)+2;
volatile bit PWM1EN @ ((unsigned)&PWMCON*8)+1;
volatile bit PWM0EN @ ((unsigned)&PWMCON*8)+0;



volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
volatile bit ADON @ ((unsigned)&ADCON0*8)+0;


volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;


volatile bit TRISA7 @ ((unsigned)&TRISA*8)+7;
volatile bit TRISA6 @ ((unsigned)&TRISA*8)+6;
volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;


volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;


volatile bit TRISC7 @ ((unsigned)&TRISC*8)+7;
volatile bit TRISC6 @ ((unsigned)&TRISC*8)+6;
volatile bit TRISC5 @ ((unsigned)&TRISC*8)+5;
volatile bit TRISC4 @ ((unsigned)&TRISC*8)+4;
volatile bit TRISC3 @ ((unsigned)&TRISC*8)+3;
volatile bit TRISC2 @ ((unsigned)&TRISC*8)+2;
volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;


volatile bit TRISD7 @ ((unsigned)&TRISD*8)+7;
volatile bit TRISD6 @ ((unsigned)&TRISD*8)+6;
volatile bit TRISD5 @ ((unsigned)&TRISD*8)+5;
volatile bit TRISD4 @ ((unsigned)&TRISD*8)+4;
volatile bit TRISD3 @ ((unsigned)&TRISD*8)+3;
volatile bit TRISD2 @ ((unsigned)&TRISD*8)+2;
volatile bit TRISD1 @ ((unsigned)&TRISD*8)+1;
volatile bit TRISD0 @ ((unsigned)&TRISD*8)+0;


volatile bit WPUA7 @ ((unsigned)&WPUA*8)+7;
volatile bit WPUA6 @ ((unsigned)&WPUA*8)+6;
volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;


volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;


volatile bit WPUC7 @ ((unsigned)&WPUC*8)+7;
volatile bit WPUC6 @ ((unsigned)&WPUC*8)+6;
volatile bit WPUC5 @ ((unsigned)&WPUC*8)+5;
volatile bit WPUC4 @ ((unsigned)&WPUC*8)+4;
volatile bit WPUC3 @ ((unsigned)&WPUC*8)+3;
volatile bit WPUC2 @ ((unsigned)&WPUC*8)+2;
volatile bit WPUC1 @ ((unsigned)&WPUC*8)+1;
volatile bit WPUC0 @ ((unsigned)&WPUC*8)+0;



volatile bit WPUD7 @ ((unsigned)&WPUD*8)+7;
volatile bit WPUD6 @ ((unsigned)&WPUD*8)+6;
volatile bit WPUD5 @ ((unsigned)&WPUD*8)+5;
volatile bit WPUD4 @ ((unsigned)&WPUD*8)+4;
volatile bit WPUD3 @ ((unsigned)&WPUD*8)+3;
volatile bit WPUD2 @ ((unsigned)&WPUD*8)+2;
volatile bit WPUD1 @ ((unsigned)&WPUD*8)+1;
volatile bit WPUD0 @ ((unsigned)&WPUD*8)+0;


volatile bit WPDA7 @ ((unsigned)&WPDA*8)+7;
volatile bit WPDA6 @ ((unsigned)&WPDA*8)+6;
volatile bit WPDA5 @ ((unsigned)&WPDA*8)+5;
volatile bit WPDA4 @ ((unsigned)&WPDA*8)+4;
volatile bit WPDA3 @ ((unsigned)&WPDA*8)+3;
volatile bit WPDA2 @ ((unsigned)&WPDA*8)+2;
volatile bit WPDA1 @ ((unsigned)&WPDA*8)+1;
volatile bit WPDA0 @ ((unsigned)&WPDA*8)+0;


volatile bit WPDB7 @ ((unsigned)&WPDB*8)+7;
volatile bit WPDB6 @ ((unsigned)&WPDB*8)+6;
volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
volatile bit WPDB2 @ ((unsigned)&WPDB*8)+2;
volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;


volatile bit WPDC7 @ ((unsigned)&WPDC*8)+7;
volatile bit WPDC6 @ ((unsigned)&WPDC*8)+6;
volatile bit WPDC5 @ ((unsigned)&WPDC*8)+5;
volatile bit WPDC4 @ ((unsigned)&WPDC*8)+4;
volatile bit WPDC3 @ ((unsigned)&WPDC*8)+3;
volatile bit WPDC2 @ ((unsigned)&WPDC*8)+2;
volatile bit WPDC1 @ ((unsigned)&WPDC*8)+1;
volatile bit WPDC0 @ ((unsigned)&WPDC*8)+0;


volatile bit WPDD7 @ ((unsigned)&WPDD*8)+7;
volatile bit WPDD6 @ ((unsigned)&WPDD*8)+6;
volatile bit WPDD5 @ ((unsigned)&WPDD*8)+5;
volatile bit WPDD4 @ ((unsigned)&WPDD*8)+4;
volatile bit WPDD3 @ ((unsigned)&WPDD*8)+3;
volatile bit WPDD2 @ ((unsigned)&WPDD*8)+2;
volatile bit WPDD1 @ ((unsigned)&WPDD*8)+1;
volatile bit WPDD0 @ ((unsigned)&WPDD*8)+0;


volatile bit RC1IE @ ((unsigned)&PIE1*8)+7;
volatile bit TX1IE @ ((unsigned)&PIE1*8)+6;
volatile bit RC0IE @ ((unsigned)&PIE1*8)+5;
volatile bit TX0IE @ ((unsigned)&PIE1*8)+4;
volatile bit EEIE @ ((unsigned)&PIE1*8)+3;
volatile bit ADIE @ ((unsigned)&PIE1*8)+2;
volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
volatile bit TMR1IE @ ((unsigned)&PIE1*8)+0;




volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
volatile bit SCS @ ((unsigned)&OSCCON*8)+0;



volatile bit TUN6 @ ((unsigned)&OSCTUNE*8)+6;
volatile bit TUN5 @ ((unsigned)&OSCTUNE*8)+5;
volatile bit TUN4 @ ((unsigned)&OSCTUNE*8)+4;
volatile bit TUN3 @ ((unsigned)&OSCTUNE*8)+3;
volatile bit TUN2 @ ((unsigned)&OSCTUNE*8)+2;
volatile bit TUN1 @ ((unsigned)&OSCTUNE*8)+1;
volatile bit TUN0 @ ((unsigned)&OSCTUNE*8)+0;


volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;



volatile bit CSRC1 @ ((unsigned)&TXSTA1*8)+7;
volatile bit TX9EN1 @ ((unsigned)&TXSTA1*8)+6;
volatile bit TXEN1 @ ((unsigned)&TXSTA1*8)+5;
volatile bit SYNC1 @ ((unsigned)&TXSTA1*8)+4;
volatile bit BRGHEN1 @ ((unsigned)&TXSTA1*8)+2;
volatile bit TRMT1 @ ((unsigned)&TXSTA1*8)+1;
volatile bit TX9D1 @ ((unsigned)&TXSTA1*8)+0;



volatile bit CSRC @ ((unsigned)&TXSTA0*8)+7;
volatile bit TX9EN0 @ ((unsigned)&TXSTA0*8)+6;
volatile bit TXEN @ ((unsigned)&TXSTA0*8)+5;
volatile bit SYNC @ ((unsigned)&TXSTA0*8)+4;
volatile bit BRGHEN0 @ ((unsigned)&TXSTA0*8)+2;
volatile bit TRMT @ ((unsigned)&TXSTA0*8)+1;
volatile bit TX9D @ ((unsigned)&TXSTA0*8)+0;



volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
volatile bit CHS4 @ ((unsigned)&ADCON1*8)+6;


volatile bit SWDTEN @ ((unsigned)&WDTCON*8)+0;


volatile bit COM29EN @ ((unsigned)&LCDCON3*8)+7;
volatile bit COM28EN @ ((unsigned)&LCDCON3*8)+6;
volatile bit COM27EN @ ((unsigned)&LCDCON3*8)+5;
volatile bit COM26EN @ ((unsigned)&LCDCON3*8)+4;
volatile bit COM25EN @ ((unsigned)&LCDCON3*8)+3;
volatile bit COM24EN @ ((unsigned)&LCDCON3*8)+2;
volatile bit COM23EN @ ((unsigned)&LCDCON3*8)+1;
volatile bit COM22EN @ ((unsigned)&LCDCON3*8)+0;


volatile bit LCDEN @ ((unsigned)&LCDCON*8)+7;
volatile bit LEDEN @ ((unsigned)&LCDCON*8)+6;
volatile bit LCDF @ ((unsigned)&LCDCON*8)+4;
volatile bit LEDCLK3 @ ((unsigned)&LCDCON*8)+3;
volatile bit LEDCLK2 @ ((unsigned)&LCDCON*8)+2;
volatile bit LEDCLK1 @ ((unsigned)&LCDCON*8)+1;
volatile bit LEDCLK0 @ ((unsigned)&LCDCON*8)+0;



volatile bit COM7EN @ ((unsigned)&LCDCON0*8)+7;
volatile bit COM6EN @ ((unsigned)&LCDCON0*8)+6;
volatile bit COM5EN @ ((unsigned)&LCDCON0*8)+5;
volatile bit COM4EN @ ((unsigned)&LCDCON0*8)+4;
volatile bit COM3EN @ ((unsigned)&LCDCON0*8)+3;
volatile bit COM2EN @ ((unsigned)&LCDCON0*8)+2;
volatile bit COM1EN @ ((unsigned)&LCDCON0*8)+1;
volatile bit COM0EN @ ((unsigned)&LCDCON0*8)+0;


volatile bit COM15EN @ ((unsigned)&LCDCON1*8)+7;
volatile bit COM14EN @ ((unsigned)&LCDCON1*8)+6;
volatile bit COM13EN @ ((unsigned)&LCDCON1*8)+5;
volatile bit COM12EN @ ((unsigned)&LCDCON1*8)+4;
volatile bit COM11EN @ ((unsigned)&LCDCON1*8)+3;
volatile bit COM10EN @ ((unsigned)&LCDCON1*8)+2;
volatile bit COM9EN @ ((unsigned)&LCDCON1*8)+1;
volatile bit COM8EN @ ((unsigned)&LCDCON1*8)+0;



volatile bit LCDISEL1 @ ((unsigned)&LCDCON2*8)+7;
volatile bit LCDISEL0 @ ((unsigned)&LCDCON2*8)+6;
volatile bit COM21EN @ ((unsigned)&LCDCON2*8)+5;
volatile bit COM20EN @ ((unsigned)&LCDCON2*8)+4;
volatile bit COM19EN @ ((unsigned)&LCDCON2*8)+3;
volatile bit COM18EN @ ((unsigned)&LCDCON2*8)+2;
volatile bit COM17EN @ ((unsigned)&LCDCON2*8)+1;
volatile bit COM16EN @ ((unsigned)&LCDCON2*8)+0;



volatile bit SEGDRI3 @ ((unsigned)&SEGEN2*8)+7;
volatile bit SEGDRI2 @ ((unsigned)&SEGEN2*8)+6;
volatile bit SEGDRI1 @ ((unsigned)&SEGEN2*8)+5;
volatile bit SEGDRI0 @ ((unsigned)&SEGEN2*8)+4;


volatile bit SEG15EN @ ((unsigned)&SEGEN1*8)+7;
volatile bit SEG14EN @ ((unsigned)&SEGEN1*8)+6;
volatile bit SEG13EN @ ((unsigned)&SEGEN1*8)+5;
volatile bit SEG12EN @ ((unsigned)&SEGEN1*8)+4;
volatile bit SEG11EN @ ((unsigned)&SEGEN1*8)+3;
volatile bit SEG10EN @ ((unsigned)&SEGEN1*8)+2;
volatile bit SEG9EN @ ((unsigned)&SEGEN1*8)+1;
volatile bit SEG8EN @ ((unsigned)&SEGEN1*8)+0;


volatile bit SEG7EN @ ((unsigned)&SEGEN0*8)+7;
volatile bit SEG6EN @ ((unsigned)&SEGEN0*8)+6;
volatile bit SEG5EN @ ((unsigned)&SEGEN0*8)+5;
volatile bit SEG4EN @ ((unsigned)&SEGEN0*8)+4;
volatile bit SEG3EN @ ((unsigned)&SEGEN0*8)+3;
volatile bit SEG2EN @ ((unsigned)&SEGEN0*8)+2;
volatile bit SEG1EN @ ((unsigned)&SEGEN0*8)+1;
volatile bit SEG0EN @ ((unsigned)&SEGEN0*8)+0;




volatile bit EEPGD @ ((unsigned)&EECON1*8)+7;
volatile bit WRERR @ ((unsigned)&EECON1*8)+3;
volatile bit WREN @ ((unsigned)&EECON1*8)+2;
volatile bit WR @ ((unsigned)&EECON1*8)+1;
volatile bit RD @ ((unsigned)&EECON1*8)+0;


# 27 "D:\PROGRA~2\CMS_ID~1.12\data\include\cms.h"
#pragma intrinsic(__nop)
extern void __nop(void);

# 76
extern unsigned int flash_read(unsigned short addr);


# 149
#pragma intrinsic(_delay)
extern __nonreentrant void _delay(unsigned long);

# 184
extern unsigned char __resetbits;
extern __bit __powerdown;
extern __bit __timeout;

# 15 "E:\ProjectFile\2019\1-50C88\Program\Y-50C88-A008\board_define.h"
typedef
union
{
struct
{
unsigned b0:1;
unsigned b1:1;
unsigned b2:1;
unsigned b3:1;
unsigned b4:1;
unsigned b5:1;
unsigned b6:1;
unsigned b7:1;
}one;
unsigned char all;
}bits;



typedef signed char int8;
typedef signed int int16;
typedef signed long int32;
typedef unsigned char uint8;
typedef unsigned int uint16;
typedef unsigned long uint32;

typedef volatile bit v_bit;
typedef volatile unsigned char v_uint8;
typedef volatile unsigned int v_uint16;

# 8 "E:\ProjectFile\2019\1-50C88\Program\Y-50C88-A008\var_global.h"
extern v_bit b_MainLoop_8ms;
extern v_bit b_MainLoop_500ms;
extern v_bit b_LedCol;

extern v_uint8 MainTime_8ms;
extern v_uint8 MainTime_10ms;
extern v_uint8 MainTime_500ms;
extern v_uint8 LedCol_500ms;
extern v_uint8 WaitCycle;



extern v_bit b_ShortOn;
extern v_uint8 ShortCntL;
extern v_uint8 ShortCntM;

extern v_uint8 PresetTimeS;
extern v_uint8 PresetTimeM;
extern v_uint8 PresetTimeH;
extern v_uint8 KeepWarmS;
extern v_uint8 KeepWarmM;
extern v_uint8 KeepWarmH;
extern v_uint8 WorkTimeS;
extern v_uint8 WorkTimeM;
extern v_uint8 WorkTimeH;
extern v_uint8 CountTimeS;

extern v_bit b_Standby;
extern v_uint8 StandbyTimeCnt;
extern v_uint8 ErrorSoundTime;

extern v_bit b_JudgeLidOk;
extern v_uint8 JudgeLidCnt;
extern v_uint8 JudgeLidMin;


extern v_bit b_TestShow;
extern v_uint8 TestShow;
extern v_uint8 SendShow;



extern v_uint8 SysStatus;
extern v_uint8 ChooseFun;
extern v_uint8 ChooseFunSave;
extern v_uint8 WorkStage;
extern v_uint8 TasteCase;
extern v_uint8 PresetState;
extern v_uint8 ErrorCode;
extern v_uint8 WorkStep;
extern v_uint8 CountDownTime;
extern v_uint8 CountDownTimeSave;
extern v_uint8 FactoryTestData;
extern v_uint8 PressureData;
extern v_uint8 PressureCountTime;
extern v_bit b_AutoKeepWarm;



extern v_uint8 BuzCnt;
extern v_uint8 BuzUpTime;
extern v_uint8 BuzDownTime;
extern v_uint8 BuzUpTemp;
extern v_uint8 BuzDownTemp;


extern v_uint8 KeyFlag;
extern v_uint16 KeyData;
extern v_uint8 LongKeyCount;


extern v_uint8 DispData[];
extern v_uint8 HorseShowTime160ms;
extern v_uint8 HorseCount;
extern v_uint8 HourBuf;
extern v_uint8 MinBuf;
extern v_uint8 Led_Step_100C;


extern v_uint8 Ad_Bot;
extern v_uint8 Ad_Lid;
extern v_uint8 Ad_Pressure;
extern v_uint8 Bot_Temp;

extern v_bit b_AdBot_OK;
extern v_uint8 Ad_Bot_Raw;
extern v_uint8 Ad_Pressure_Raw;


extern v_bit b_LidClosed;
extern v_bit b_PressureOn;


extern v_bit b_BotTempOut;
extern v_bit b_Opencook_OK;
extern v_uint8 TotalTimeSave;



extern v_bit b_BotHeatEn;
extern v_bit b_BotHeatOn;
extern v_uint8 HeatCnt500ms;
extern v_uint8 RelOnCnt;
extern v_uint8 RelOffCnt;


extern v_bit b_ZeroWave_OK;
extern v_bit b_Zero;
extern v_bit b_Zero_EN;
extern v_uint8 ZeroDeley;
extern v_bit b_ZeroDeley_OK;
extern v_bit b_RelType;
extern v_uint16 ZeroTimesShow;
extern v_bit b_ZeroTimeout;
extern v_uint8 ZeroTimeoutCnt;
extern v_uint16 RelWaitCnt;
extern v_bit b_Rel_NoZero;


extern v_bit b_VolData_OK;
extern v_uint8 Ad_Vol_Raw;
extern v_uint8 Ad_Vol_Avg;
extern v_uint16 AC_Vol_Rms;
extern v_uint16 Ad_Vol_Sum;
extern v_uint8 Vrms_Level;



extern const uint8 Fc_ID_1;
extern const uint8 Fc_ID_2;
extern const uint8 Fc_ID_3;
extern const uint8 Fc_ID_4;
extern const uint8 Fc_ID_5;
extern const uint8 Fc_ID_6;
extern const uint8 Fc_ID_7;
extern const uint8 Fc_ID_8;
extern uint8 Fc_ID[8];


extern v_bit b_Auto_test;

# 7 "E:\ProjectFile\2019\1-50C88\Program\Y-50C88-A008\delay.h"
void DelayXus(unsigned int x);
void DelayXms(unsigned int x);

# 303 "E:\ProjectFile\2019\1-50C88\Program\Y-50C88-A008\display.h"
void LED_Drive(void);
void LED_Task(void);
void Init_LED_Module(void);

# 29 "E:\ProjectFile\2019\1-50C88\Program\Y-50C88-A008\Sound.h"
void Sound_Deal(void);

# 298 "E:\ProjectFile\2019\1-50C88\Program\Y-50C88-A008\adc.h"
void Get_Lid_Data(void);
void Get_Pressure_Switch_Data(void);
void Get_AC_Voltage(void);
void Get_AC_Rms(void);
void Get_Zero(void);
void Get_Temp_Data(void);
uint8 Get_AD(uint8 ad_ch);

# 17 "E:\ProjectFile\2019\1-50C88\Program\Y-50C88-A008\error.h"
void Error_Deal(void);

# 7 "E:\ProjectFile\2019\1-50C88\Program\Y-50C88-A008\time.h"
void Time_Deal(void);

# 14 "E:\ProjectFile\2019\1-50C88\Program\Y-50C88-A008\cook.h"
void Cook_Task(void);
void Relay_Duty_Control(void);
void Operate_Relay_IO(void);

# 153 "E:\ProjectFile\2019\1-50C88\Program\Y-50C88-A008\key.h"
void Key_Drive(void);
void Key_Task(void);
void Cancel(void);

# 4 "E:\ProjectFile\2019\1-50C88\Program\Y-50C88-A008\key.c"
const uint8 TIME_TAB[15][4] =
{


{ 0, 0, 0, 0},
{ 16, 18, 20, 0},
{ 15, 17, 21, 0},
{ 5, 10, 15, 0},
{ 10, 15, 20, 0},
{ 20, 28, 35, 0},
{ 15, 20, 25, 0},
{ 12, 15, 20, 0},
{ 15, 20, 30, 0},
{ 18, 25, 30, 0},
{ 20, 25, 35, 0},
{ 30, 35, 45, 0},
{ 40, 40, 40, 0},
{ 8, 8, 8, 0},
{ 8, 8, 8, 0},
};

# 29
void Maink_Cancel(void)
{

if(SysStatus == 1)
{
SysStatus = 4;
ChooseFunSave = 0;
{{BuzCnt = 1; BuzUpTime = 75/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}

else if(SysStatus == 2 || SysStatus == 3 || SysStatus == 4)
{
Cancel();
b_AutoKeepWarm = 0;
{{BuzCnt = 1; BuzUpTime = 75/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}

}

# 96
void MainK_Preset(void)
{
if(SysStatus == 2)
{
if(ChooseFun == 12 || ChooseFun == 14)
{
return;
}

if(PresetState == 1)
{
PresetState = 2;

if(PresetTimeH == 0 && PresetTimeM == 0)
{
PresetTimeH = 2;
}


LedCol_500ms = 0;
b_LedCol = 1;

{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}

else if(PresetState == 2)
{

if((KeyFlag & 0x04) == 0)
{
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
PresetTimeM += 30;

}
else
{
if(++LongKeyCount >= 40)
{
LongKeyCount = 0;
PresetTimeM += 30;
}
else
{
return;
}
}
if(PresetTimeM >= 60)
{
PresetTimeM = 0;
PresetTimeH++;
}

if(PresetTimeH >= 24 && PresetTimeM > 0)
{
PresetTimeH = 2;
PresetTimeM = 0;
}
}
}
}

# 160
void Maink_Fast_Fun(void)
{
if(SysStatus == 1 || SysStatus == 2)
{

if(PresetState == 0 || ChooseFun == 12 || ChooseFun == 14)
{

PresetTimeM = 0;
PresetTimeH = 0;
}
SysStatus = 2;

PresetState = 1;
CountDownTime = TIME_TAB[ChooseFun][1];

b_LedCol = 1;
LedCol_500ms = 0;
MainTime_500ms = 0;
Led_Step_100C = 0;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
}

# 187
void Maink_Test(void)
{

if(KeyData == 0x1000)
{
b_TestShow = 0;
{{BuzCnt = 1; BuzUpTime = 75/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
return;
}


if(KeyData == 0x4000)
{
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
if(++TestShow >= (2 + 1))
{
TestShow = 0;
}
SendShow = 0;
return;
}


if(KeyData == 0x8000)
{
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
if(TestShow == 0)
{
if(++SendShow > 8)
{
SendShow = 1;
}
}
else if(TestShow == 1)
{
if(++SendShow >= 3)
{
SendShow = 0;
}
}
return;
}
}

# 233
void Maink_Factory(void)
{

if(KeyData == 0x1000 && FactoryTestData != (14-1))
{
Cancel();
b_JudgeLidOk = 0;
JudgeLidCnt = 0;
JudgeLidMin = 0;
{{BuzCnt = 1; BuzUpTime = 75/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
return;
}


switch(KeyData)
{
case 0x0008:
if(FactoryTestData == 0)
{
FactoryTestData = 1;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;

case 0x0001:
if(FactoryTestData == 1)
{
FactoryTestData = 2;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;


case 0x0004:
if(FactoryTestData == 2)
{
FactoryTestData = 3;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;


case 0x0002:
if(FactoryTestData == 3)
{
FactoryTestData = 4;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;


case 0x0080:
if(FactoryTestData == 4)
{
FactoryTestData = 5;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;


case 0x0010:
if(FactoryTestData == 5)
{
FactoryTestData = 6;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;


case 0x0040:
if(FactoryTestData == 6)
{
FactoryTestData = 7;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;


case 0x0020:
if(FactoryTestData == 7)
{
FactoryTestData = 8;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;


case 0x0800:
if(FactoryTestData == 8)
{
FactoryTestData = 9;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;


case 0x0100:
if(FactoryTestData == 9)
{
FactoryTestData = 10;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;


case 0x0400:
if(FactoryTestData == 10)
{
FactoryTestData = 11;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;


case 0x0200:
if(FactoryTestData == 11)
{
FactoryTestData = 12;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;


case 0x4000:
if(FactoryTestData == 12)
{
FactoryTestData = 13;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;


case 0x1000:
if(FactoryTestData == 13)
{
FactoryTestData = 14;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;


case 0x8000:
if(FactoryTestData == 14)
{
FactoryTestData = 15;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;


case 0x2000:
if(FactoryTestData == 15)
{
FactoryTestData = 16;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
break;

# 418
default: break;
}

if(FactoryTestData == 16)
{
FactoryTestData = 19;
WorkStep = 0;
{{BuzCnt = 3; BuzUpTime = 50/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
}
}

# 432
void Key_Task(void)
{

if(KeyFlag == 0x00)
{
LongKeyCount = 0;
return;
}


if(KeyFlag & 0x04)
{

if( b_TestShow == 0 && KeyData == (0x4000 | 0x8000))
{
b_TestShow = 1;
TestShow = 0;
SendShow = 0;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
return;
}

if((SysStatus == 1 || SysStatus == 2) && KeyData == (0x4000 | 0x1000))
{
SysStatus = 5;
FactoryTestData = 0;

{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
return;
}

if(SysStatus == 2 && KeyData == 0x4000)
{
MainK_Preset();
return;
}

return;
}


if(KeyFlag & 0x01)
{
KeyFlag&=~(1<<(0));

StandbyTimeCnt = 0;


if(b_Standby)
{
b_Standby = 0;
{{BuzCnt = 1; BuzUpTime = 25/2; BuzDownTime = 250/2; BuzUpTemp = BuzUpTime; BuzDownTemp = BuzDownTime;};};
return;
}


if(b_TestShow)
{



Fc_ID[0] = Fc_ID_3;
Fc_ID[1] = Fc_ID_4;
Fc_ID[2] = Fc_ID_5;
Fc_ID[3] = Fc_ID_6;
Fc_ID[4] = Fc_ID_7;
Fc_ID[5] = Fc_ID_8;



Maink_Test();
return;
}

if(SysStatus == 5)
{
Maink_Factory();
return;
}
if(KeyData == 0x1000)
{
Maink_Cancel();
return;
}
if(SysStatus==1 || SysStatus==2)
{
switch(KeyData)
{
case 0x0008: ChooseFun = 1; Maink_Fast_Fun(); break;
case 0x0004: ChooseFun = 2; Maink_Fast_Fun(); break;
case 0x0002: ChooseFun = 3; Maink_Fast_Fun(); break;
case 0x0001: ChooseFun = 4; Maink_Fast_Fun(); break;

case 0x0080: ChooseFun = 5; Maink_Fast_Fun(); break;
case 0x0040: ChooseFun = 6; Maink_Fast_Fun(); break;
case 0x0020: ChooseFun = 7; Maink_Fast_Fun(); break;
case 0x0010: ChooseFun = 8; Maink_Fast_Fun(); break;

case 0x0800: ChooseFun = 9;Maink_Fast_Fun(); break;
case 0x0400: ChooseFun = 10; Maink_Fast_Fun(); break;
case 0x0200: ChooseFun = 11; Maink_Fast_Fun(); break;
case 0x0100: ChooseFun = 12; Maink_Fast_Fun(); break;

case 0x4000: MainK_Preset(); break;
case 0x8000: ChooseFun = 13; Maink_Fast_Fun(); break;
case 0x2000: ChooseFun = 14; Maink_Fast_Fun(); break;

default: break;
}
}
}
}

# 549
void Cancel(void)
{

SysStatus = 1;
WorkStage = 0;
ChooseFun = 0;

PresetState = 0;
ErrorCode = 0;
CountDownTime = 0;
CountDownTimeSave = 0;
WorkStep = 0;
FactoryTestData = 0;
PressureData = 0;
PressureCountTime = 0;


b_ShortOn = 0;
ShortCntL = 0;
ShortCntM = 0;

PresetTimeH = 0;
PresetTimeM = 0;
PresetTimeS = 0;

WorkTimeH = 0;
WorkTimeM = 0;
WorkTimeS = 0;

KeepWarmH = 0;
KeepWarmM = 0;
KeepWarmS = 0;

CountTimeS = 0;


b_BotHeatEn = 0;
b_BotHeatOn = 0;


b_BotTempOut = 0;
b_Opencook_OK = 0;

Led_Step_100C = 0;
}

# 599
void KscanIo(void)
{
unsigned char i = 0;


{TRISB|=(1<<(1)); WPUB|=(1<<(1));};
{TRISD|=(1<<(4)); WPUD|=(1<<(4));};
{TRISB|=(1<<(2)); WPUB|=(1<<(2));};
{TRISB|=(1<<(5)); WPUB|=(1<<(5));};

TRISB|=(1<<(3));
TRISB|=(1<<(4));
TRISB|=(1<<(6));
TRISB|=(1<<(7));

__nop();
__nop();
__nop();
__nop();
__nop();


for(i = 0; i < 4; i++)
{
switch(i)
{
case 0:
RB3 = 0;
TRISB&=~(1<<(3));
break;
case 1:
TRISB|=(1<<(3));
RB4 = 0;
TRISB&=~(1<<(4));
break;
case 2:
TRISB|=(1<<(4));
RB6 = 0;
TRISB&=~(1<<(6));
break;
case 3:
TRISB|=(1<<(6));
RB7 = 0;
TRISB&=~(1<<(7));
break;
default: break;
}

if(!RB1)
KeyData|=(1<<(0+i*4));
if(!RD4)
KeyData|=(1<<(1+i*4));
if(!RB2)
KeyData|=(1<<(2+i*4));
if(!RB5)
KeyData|=(1<<(3+i*4));
}
}

# 661
void Key_Drive(void)
{
static unsigned char keycount,nkeycount;
static unsigned int keyold;
static unsigned int keylong;

KeyData = 0;
KscanIo();

if(KeyData != 0)
{
nkeycount = 0;
if(KeyData == keyold)
{
if(KeyFlag & 0x02)
{
if(++keylong >= 125)
{
keylong = 0;
KeyFlag|=(1<<(0));
KeyFlag|=(1<<(2));
}
}
else if(++keycount >= 5)
{
KeyFlag|=(1<<(0));
KeyFlag|=(1<<(1));
}
}
else
{
keyold = KeyData;
keycount = 0;
}
}
else
{
keycount = 0;
keylong = 0;
if(++nkeycount >= 5)
{

KeyFlag = 0;
KeyData = 0;
keyold = 0;
}
}
}

